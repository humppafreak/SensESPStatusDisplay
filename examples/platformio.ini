; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; IMPORTANT: This file defines the environment for building SensESP
; itself when doing feature development. It must NOT be used as a template
; for projects merely based on SensESP. For that purpose, use the file
; examples/platformio.ini instead.

[platformio]
;set default_envs to whichever board(s) you use. Build/Run/etc processes those envs
default_envs = 
   d1_mini
   esp32dev
;   esp-wrover-kit

[env]
; Global data for all [env:***]
framework = arduino
lib_ldf_mode = deep
monitor_speed = 115200
lib_deps =
   # use this if you want to use the latest released version
   SignalK/SensESP  
   # use this if you want to use the latest development version
   # (may break at any given time)
   # https://github.com/SignalK/SensESP.git  
   https://github.com/SignalK/SensESPStatusDisplay.git

[espressif8266_base]
;this section has config items common to all ESP8266 boards
platform = espressif8266
build_flags =
   -Wl,-Teagle.flash.4m1m.ld
   -Wall
   -Wno-reorder

[env:d1_mini]
extends = espressif8266_base
board = d1_mini
build_flags =
   ${espressif8266_base.build_flags}
   -D LED_BUILTIN=2
board_build.f_cpu = 160000000L
upload_resetmethod = nodemcu
upload_speed = 460800  

[espressif32_base]
;this section has config items common to all ESP32 boards
platform = espressif32
build_unflags = -Werror=reorder
board_build.partitions = min_spiffs.csv
monitor_filters = esp32_exception_decoder

[env:esp32dev]
extends = espressif32_base
board = esp32dev
build_flags =
   -D LED_BUILTIN=2
upload_port = /dev/tty.SLAB_USBtoUART
monitor_port = /dev/tty.SLAB_USBtoUART

[env:esp-wrover-kit]
extends = espressif32_base
board = esp-wrover-kit
upload_speed = 460800
